### Questions 1 to 5 - 

Que - 1 )
	(i)
		Using shell command -> ln -s test_file.txt link_file.txt
		Using sys call -> Using symlink() call we can create it.
	(ii)
		Using shell command -> ln file1 file2
		Using sys call -> 
	(iii)
		Using sys call -> #define _POSIX_SOURCE
							#include <sys/stat.h>
							int mkfifo(const char *pathname, mode_t mode);
							https://www.geeksforgeeks.org/named-pipe-fifo-example-c-program/


Ques - 2)
	use lsof -p "pid" in mac

Ques - 3)
	#include <stdio.h>
	#include <fcntl.h>
	#include <stdlib.h>
	#include <unistd.h>

	int main() {
	    // Use the creat() system call to create a file
	    int fd = creat("example.txt", 0644);

	    if (fd == -1) {
	        perror("Error creating file");
	        return 1;
	    }

	    printf("File descriptor value: %d\n", fd);

	    // Close the file descriptor
	    close(fd);

	    return 0;
	}

Ques - 4)
	#include <stdio.h>
	#include <stdlib.h>

	int main() {
	    // Open an existing file in read-write mode
	    FILE *file = fopen("existing_file.txt", "r+");

	    if (file == NULL) {
	        perror("Error opening file");
	        return 1;
	    }

	    // Perform read and write operations on the file
	    char buffer[100];
	    
	    // Reading from the file
	    if (fgets(buffer, sizeof(buffer), file) != NULL) {
	        printf("Read from file: %s", buffer);
	    } else {
	        perror("Error reading from file");
	    }
	    
	    // Writing to the file
	    fputs("Adding new content to the file.", file);

	    // Close the file
	    fclose(file);

	    return 0;
	}


